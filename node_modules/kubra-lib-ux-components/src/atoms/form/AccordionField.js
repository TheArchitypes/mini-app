import React, { Component } from 'react';
import autobind from 'class-autobind';
import PropTypes from 'prop-types';
import { mergeClassNames } from '../../lib/mergeClassNames';
import getIdWithSuffix from '../../lib/getIdWithSuffix';

export class AccordionField extends Component {
  constructor(props) {
    super(props);
    this.state = {
      showContents: props.showContents,
    };
    autobind(this);
  }

  componentWillReceiveProps({ showContents }) {
    if (showContents === this.state.showContents) {
      return;
    }
    this.setState(() => ({ showContents }));
  }

  onToggleMenu(showContents) {
    if (!this.props.disabled) {
      this.setState(() => ({
        showContents,
      }));
    }
  }

  render() {
    const {
      label,
      className,
      contents,
      maxHeight,
      disabled,
      onClick,
      expandId,
      disableRowClick,
    } = this.props;

    const {
      showContents,
    } = this.state;

    const {
      onToggleMenu,
    } = this;

    return (
      <div
        className={mergeClassNames(`select ${disabled ? 'disabled' : ''} ${showContents ? 'open' : ''}`, className)}
        id={getIdWithSuffix(this.props, 'container')}
      >
        <div className="accordion">
          <button type="button" id={expandId} onClick={() => { onToggleMenu(!showContents); onClick(); }} className="accordion-expand icon iconic" data-glyph={showContents ? 'minus' : 'plus'} />
          <div
            onClick={() => { if (!disableRowClick) { onToggleMenu(!showContents); onClick(); } }}
            role="button"
            className={disableRowClick ? 'accordion-container no-pointer' : 'accordion-container pointer'}
            tabIndex="0"
          >
            <span className="accordion-placeholder" >
              {label}
            </span>
          </div>
          <div className={showContents ? 'accordion-contents open' : 'accordion-contents'} style={{ maxHeight }}>{contents}</div>
        </div>
      </div>
    );
  }
}

AccordionField.propTypes = {
  label: PropTypes.oneOfType([PropTypes.shape({}), PropTypes.string]),
  className: PropTypes.string,
  showContents: PropTypes.bool,
  contents: PropTypes.oneOfType([PropTypes.shape({}), PropTypes.string]),
  maxHeight: PropTypes.string,
  disabled: PropTypes.bool,
  onClick: PropTypes.func,
  expandId: PropTypes.string,
  disableRowClick: PropTypes.bool,
};

AccordionField.defaultProps = {
  label: null,
  className: '',
  showContents: false,
  contents: {},
  maxHeight: '100%',
  disabled: false,
  onClick: () => {},
  expandId: '',
  disableRowClick: false,
};

export default {
  AccordionField,
};
