import React, { Component } from 'react';
import autobind from 'class-autobind';
import PropTypes from 'prop-types';
import { mergeClassNames } from '../../lib/mergeClassNames';
import preventDefault from '../../lib/preventDefault';
import htmlProps from '../../lib/htmlProps';
import getIdWithSuffix from '../../lib/getIdWithSuffix';

export class RadioButtonGroup extends Component {
  constructor(props) {
    super(props);
    this.state = this.defaultState();
    autobind(this);
  }

  componentWillReceiveProps({ value }) {
    if (value === undefined) {
      return;
    }
    this.setState(() => ({ value }));
  }

  onSelect(value) {
    this.setState(() => ({
      value,
    }));
  }

  defaultState() {
    return {
      value: this.props.value || this.props.defaultValue || this.props.defaultSelected || '',
    };
  }

  render() {
    const {
      children,
      name,
      className,
      onChange,
    } = this.props;

    const {
      onSelect,
    } = this;

    const _onChange = (value) => {
      if (value !== this.state.value) {
        onSelect(value);
        onChange(value);
      }
    };

    const isSelected = value => this.state.value === value;
    return (
      <div {...htmlProps(this.props)} className={mergeClassNames('radio-button-group', className)}>
        {children.map(
          (radioButton, index) => React.cloneElement(radioButton, {
            name,
            key: `radio-button-${index}`,
            checked: isSelected(radioButton.props.value),
            onSelect: _onChange,
            id: radioButton.props.id,
          }),
        )}
      </div>
    );
  }
}

RadioButtonGroup.propTypes = {
  children: PropTypes.node.isRequired,
  name: PropTypes.string.isRequired,
  defaultValue: PropTypes.string,
  defaultSelected: PropTypes.string,
  value: PropTypes.string,
  onChange: PropTypes.func,
  className: PropTypes.string,
};

RadioButtonGroup.defaultProps = {
  className: '',
  onChange() {},
  defaultValue: undefined,
  defaultSelected: undefined,
  value: undefined,
};

export function RadioButton(props) {
  const { value, name, label, checked, className, onSelect } = props;
  return (
    <div {...htmlProps(props)} className={mergeClassNames('radio-button', className)}>
      <input
        readOnly
        type="radio"
        value={value}
        name={name}
        checked={checked}
        id={getIdWithSuffix(props, 'input')}
      />
      <a href="" onClick={preventDefault(() => onSelect(value))} id={getIdWithSuffix(props, 'on-click-link')}>
        <label htmlFor={name} id={getIdWithSuffix(props, 'label')}>
          {label}
        </label>
      </a>
    </div>
  );
}

RadioButton.propTypes = {
  value: PropTypes.string.isRequired,
  name: PropTypes.string,
  label: PropTypes.string.isRequired,
  className: PropTypes.string,
  // Injected
  checked: PropTypes.bool,
  onSelect: PropTypes.func,
};

RadioButton.defaultProps = {
  onSelect() {},
  name: null,
  className: '',
  checked: false,
};

export default {
  RadioButtonGroup,
  RadioButton,
};
