import React, { Component } from 'react';
import Popper from 'popper.js';
import PropTypes from 'prop-types';

export class Tooltip extends Component {
  componentDidMount() {
    this.makePopper();
  }
  componentDidUpdate() {
    this.popper.destroy();
    this.makePopper();
  }
  componentWillUnmount() {
    this.popper.destroy();
  }
  makePopper() {
    const { align } = this.props;
    const placement = {
      left: 'bottom-start',
      middle: 'bottom',
      right: 'bottom-end',
    };
    this.popper = new Popper(this.hoverZone, this.tooltipBody, {
      placement: placement[align],
      modifiers: {
        keepTogether: {
          enabled: true,
        },
        arrow: {
          enabled: true,
          element: this.arrow,
        },
      },
    });
  }
  render() {
    const { children, align, tooltip } = this.props;
    return (
      <span className={`tooltip ${align}`}>
        <span
          className="hover-zone"
          ref={(ref) => {
            this.hoverZone = ref;
          }}
        >
          {children}
        </span>
        <span
          className="body"
          ref={(ref) => {
            this.tooltipBody = ref;
          }}
        >
          {tooltip}
          <span
            className="arrow"
            ref={(ref) => {
              this.arrow = ref;
            }}
          />
        </span>
      </span>
    );
  }
}

Tooltip.propTypes = {
  tooltip: PropTypes.element.isRequired,
  children: PropTypes.element.isRequired,
  align: PropTypes.oneOf(['left', 'middle', 'right']),
};

Tooltip.defaultProps = {
  align: 'middle',
};

export default Tooltip;
