import React from 'react';
import PropTypes from 'prop-types';
import { mergeClassNames } from '../lib/mergeClassNames';
import htmlProps from '../lib/htmlProps';
import { Icon } from '../atoms/icons';
import getIdWithSuffix from '../lib/getIdWithSuffix';

export function TabItem(props) {
  const { onClick, label, disabled, className, icon, isActive } = props;
  const isActiveClass = isActive ? 'active' : '';

  return (
    <li
      id={getIdWithSuffix(props, 'li')}
      onClick={onClick}
      role="menuitem"
      className={mergeClassNames(`tab-item ${isActiveClass}`, className)}
      {...htmlProps(props)}
      disabled={disabled}
    >
      <Icon className={`${icon} small`} name={icon} />
      <span className="label">{label}</span>
    </li>
  );
}

TabItem.propTypes = {
  onClick: PropTypes.func.isRequired,
  label: PropTypes.string.isRequired,
  disabled: PropTypes.bool,
  className: PropTypes.string,
  isActive: PropTypes.bool,
  icon: PropTypes.string,
};

TabItem.defaultProps = {
  disabled: false,
  onSelectValue() {},
  className: '',
  activeClassName: '',
  icon: '',
  isActive: false,
};

export function TabCloud(props) {
  const { children, className, topPadding } = props;
  return (
    <div
      className={mergeClassNames('tab-cloud', className)}
      {...htmlProps(props)}
    >
      <div className="top-padding" style={{ flex: `0 0 ${topPadding}` }} />
      <div className="tab-container">
        {children}
      </div>
    </div>
  );
}

TabCloud.propTypes = {
  children: PropTypes.node.isRequired,
  className: PropTypes.string,
  topPadding: PropTypes.string,
};

TabCloud.defaultProps = {
  className: '',
  topPadding: null,
};

export default {
  TabItem,
  TabCloud,
};
