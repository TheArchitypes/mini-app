import React from 'react';
import PropTypes from 'prop-types';
import { browserHistory } from 'react-router';
import { mergeClassNames } from '../lib/mergeClassNames';
import htmlProps from '../lib/htmlProps';
import { IconButton } from '../atoms/buttons';
import { LinkOnHover } from '../atoms/typography';

export function Breadcrumbs(props) {
  const { links, onClick, disabled, className, icon, withBack, useHrefs } = props;
  const classNames = mergeClassNames('breadcrumbs', className);

  const goBack = () => {
    // Get link before current link
    if (links.length > 1) {
      const lastLinkUrl = links[links.length - 2].url;
      browserHistory.push(lastLinkUrl);
    }
  };

  return (
    <div className={classNames}>
      { withBack &&
      <IconButton
        icon={icon}
        onClick={onClick || goBack}
        hasCircle
        className="small marg-x-right"
        id="breadcrumbs-back"
        disabled={disabled}
        {...htmlProps}
      />
      }
      <span className="breadcrumb-list">
        {links.map((link, index) => {
          const slash = (index !== 0) ? '  /  ' : '';
          return (
            <span key={index}>
              {slash}
              <LinkOnHover route={link.url} useHref={useHrefs} id={`breadcrumb-link-${index + 1}`}>{link.label || ''}</LinkOnHover>
            </span>
          );
        })}
      </span>
    </div>
  );
}

Breadcrumbs.propTypes = {
  onClick: PropTypes.func,
  className: PropTypes.string,
  icon: PropTypes.string,
  links: PropTypes.arrayOf(PropTypes.shape({})).isRequired,
  disabled: PropTypes.bool,
  withBack: PropTypes.bool,
  useHrefs: PropTypes.bool,
};

Breadcrumbs.defaultProps = {
  icon: 'arrow-left-line-large-acute',
  className: '',
  onClick: undefined,
  disabled: false,
  withBack: false,
  useHrefs: false,
};

export default {
  Breadcrumbs,
};
