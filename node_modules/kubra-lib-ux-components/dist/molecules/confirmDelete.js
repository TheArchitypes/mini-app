'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConfirmDelete = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classAutobind = require('class-autobind');

var _classAutobind2 = _interopRequireDefault(_classAutobind);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _buttons = require('../atoms/buttons');

var _TextField = require('../atoms/form/TextField');

var _modal = require('../atoms/modal');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** Basic ConfirmDelete */
var ConfirmDelete = exports.ConfirmDelete = function (_Component) {
  _inherits(ConfirmDelete, _Component);

  function ConfirmDelete(props) {
    _classCallCheck(this, ConfirmDelete);

    var _this = _possibleConstructorReturn(this, (ConfirmDelete.__proto__ || Object.getPrototypeOf(ConfirmDelete)).call(this, props));

    _this.state = {
      userInput: '',
      class: ''
    };
    (0, _classAutobind2.default)(_this);
    return _this;
  }

  _createClass(ConfirmDelete, [{
    key: 'onChange',
    value: function onChange(e) {
      this.setState({ userInput: e });
    }
  }, {
    key: 'handleConfirm',
    value: function handleConfirm() {
      this.props.handleDelete();
      this.setState({ class: '' });
    }
  }, {
    key: 'handleError',
    value: function handleError() {
      this.setState({ class: 'invalid' });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          isOpen = _props.isOpen,
          dataType = _props.dataType,
          clickedElem = _props.clickedElem,
          confirmType = _props.confirmType,
          onBackgroundClick = _props.onBackgroundClick;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _modal.Modal,
          {
            isOpen: isOpen,
            size: 'md',
            onBackgroundClick: onBackgroundClick
          },
          _react2.default.createElement(
            'div',
            { style: { padding: '10px 20px' } },
            _react2.default.createElement(
              'h1',
              null,
              'Confirm Delete'
            ),
            _react2.default.createElement(
              'p',
              null,
              'Are you sure you want to delete this ',
              _lodash2.default.startCase(_lodash2.default.toLower(dataType)),
              '?'
            ),
            confirmType === 'input' && _react2.default.createElement(_TextField.TextField, {
              name: 'confirmDelete',
              hintText: 'Enter "' + clickedElem + '" to Delete',
              onChange: this.onChange,
              className: this.state.class,
              label: _lodash2.default.startCase(_lodash2.default.toLower(dataType)) + ' Name'
            }),
            _react2.default.createElement(
              'div',
              { style: { textAlign: 'right', padding: '10px 20px' } },
              _react2.default.createElement(_buttons.ButtonSecondary, {
                label: 'Cancel',
                onClick: onBackgroundClick
              }),
              _react2.default.createElement('span', { style: { paddingRight: '16px' } }),
              _react2.default.createElement(_buttons.ButtonPrimary, {
                label: 'Confirm',
                onClick: confirmType !== 'input' || clickedElem === this.state.userInput ? this.handleConfirm : this.handleError
              })
            )
          )
        )
      );
    }
  }]);

  return ConfirmDelete;
}(_react.Component);

ConfirmDelete.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  onBackgroundClick: _propTypes2.default.func.isRequired,
  dataType: _propTypes2.default.string.isRequired,
  clickedElem: _propTypes2.default.string.isRequired,
  confirmType: _propTypes2.default.string,
  handleDelete: _propTypes2.default.func.isRequired
};

ConfirmDelete.defaultProps = {
  confirmType: ''
};

exports.default = {
  ConfirmDelete: ConfirmDelete
};