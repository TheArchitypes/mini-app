'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pagination = Pagination;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _mergeClassNames = require('../lib/mergeClassNames');

var _buttons = require('../atoms/buttons');

var _htmlProps = require('../lib/htmlProps');

var _htmlProps2 = _interopRequireDefault(_htmlProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Pagination(props) {
  var onClick = props.onClick,
      disabled = props.disabled,
      className = props.className,
      currentPage = props.currentPage,
      totalPages = props.totalPages,
      alwaysShow = props.alwaysShow,
      id = props.id;

  var classNames = (0, _mergeClassNames.mergeClassNames)('pagination', className);

  var pageClicked = function pageClicked(index) {
    return function () {
      if (index < 0 || index >= totalPages || disabled) return;
      onClick(index);
    };
  };

  if (!alwaysShow && totalPages < 2) {
    return _react2.default.createElement('div', null);
  }

  return _react2.default.createElement(
    'div',
    Object.assign({ className: classNames }, _htmlProps2.default),
    _react2.default.createElement(_buttons.IconButton, {
      icon: 'chevron-left',
      onClick: pageClicked(currentPage - 1),
      className: 'small',
      id: id + 'pagination-previous',
      disabled: currentPage - 1 < 0
    }),
    _lodash2.default.times(totalPages, function (index) {
      var pageIndex = index + 1;
      return _react2.default.createElement(
        'a',
        {
          href: '#' + pageIndex,
          onClick: pageClicked(index),
          className: 'pagination-link ' + (index === currentPage ? 'active' : ''),
          id: id + 'page-' + pageIndex,
          key: pageIndex
        },
        pageIndex
      );
    }),
    _react2.default.createElement(_buttons.IconButton, {
      icon: 'chevron-right',
      onClick: pageClicked(currentPage + 1),
      className: 'small',
      id: id + 'pagination-next',
      disabled: currentPage + 1 >= totalPages
    })
  );
}

Pagination.propTypes = {
  onClick: _propTypes2.default.func.isRequired,
  className: _propTypes2.default.string,
  id: _propTypes2.default.string,
  currentPage: _propTypes2.default.number.isRequired,
  totalPages: _propTypes2.default.number.isRequired,
  disabled: _propTypes2.default.bool,
  alwaysShow: _propTypes2.default.bool
};

Pagination.defaultProps = {
  className: '',
  id: '',
  disabled: false,
  alwaysShow: false
};

exports.default = {
  Pagination: Pagination
};