'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Breadcrumbs = Breadcrumbs;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouter = require('react-router');

var _mergeClassNames = require('../lib/mergeClassNames');

var _htmlProps = require('../lib/htmlProps');

var _htmlProps2 = _interopRequireDefault(_htmlProps);

var _buttons = require('../atoms/buttons');

var _typography = require('../atoms/typography');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Breadcrumbs(props) {
  var links = props.links,
      onClick = props.onClick,
      disabled = props.disabled,
      className = props.className,
      icon = props.icon,
      withBack = props.withBack,
      useHrefs = props.useHrefs;

  var classNames = (0, _mergeClassNames.mergeClassNames)('breadcrumbs', className);

  var goBack = function goBack() {
    // Get link before current link
    if (links.length > 1) {
      var lastLinkUrl = links[links.length - 2].url;
      _reactRouter.browserHistory.push(lastLinkUrl);
    }
  };

  return _react2.default.createElement(
    'div',
    { className: classNames },
    withBack && _react2.default.createElement(_buttons.IconButton, Object.assign({
      icon: icon,
      onClick: onClick || goBack,
      hasCircle: true,
      className: 'small marg-x-right',
      id: 'breadcrumbs-back',
      disabled: disabled
    }, _htmlProps2.default)),
    _react2.default.createElement(
      'span',
      { className: 'breadcrumb-list' },
      links.map(function (link, index) {
        var slash = index !== 0 ? '  /  ' : '';
        return _react2.default.createElement(
          'span',
          { key: index },
          slash,
          _react2.default.createElement(
            _typography.LinkOnHover,
            { route: link.url, useHref: useHrefs, id: 'breadcrumb-link-' + (index + 1) },
            link.label || ''
          )
        );
      })
    )
  );
}

Breadcrumbs.propTypes = {
  onClick: _propTypes2.default.func,
  className: _propTypes2.default.string,
  icon: _propTypes2.default.string,
  links: _propTypes2.default.arrayOf(_propTypes2.default.shape({})).isRequired,
  disabled: _propTypes2.default.bool,
  withBack: _propTypes2.default.bool,
  useHrefs: _propTypes2.default.bool
};

Breadcrumbs.defaultProps = {
  icon: 'arrow-left-line-large-acute',
  className: '',
  onClick: undefined,
  disabled: false,
  withBack: false,
  useHrefs: false
};

exports.default = {
  Breadcrumbs: Breadcrumbs
};