'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownSearch = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classAutobind = require('class-autobind');

var _classAutobind2 = _interopRequireDefault(_classAutobind);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _getIdWithSuffix = require('../../../lib/getIdWithSuffix');

var _getIdWithSuffix2 = _interopRequireDefault(_getIdWithSuffix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DropdownSearch = exports.DropdownSearch = function (_Component) {
  _inherits(DropdownSearch, _Component);

  function DropdownSearch(props) {
    _classCallCheck(this, DropdownSearch);

    var _this = _possibleConstructorReturn(this, (DropdownSearch.__proto__ || Object.getPrototypeOf(DropdownSearch)).call(this, props));

    (0, _classAutobind2.default)(_this);
    return _this;
  }

  _createClass(DropdownSearch, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unBindKeyListeners();
    }
  }, {
    key: 'onClick',
    value: function onClick(event) {
      event.stopPropagation();
      this.props.onClick(event);
    }
  }, {
    key: 'onFocus',
    value: function onFocus(event) {
      this.props.onFocus(event);
      this.bindKeyListeners();
    }
  }, {
    key: 'onBlur',
    value: function onBlur(event) {
      this.props.onBlur(event);
      this.unBindKeyListeners();
    }
  }, {
    key: 'onKeyListen',
    value: function onKeyListen(event) {
      switch (event.keyCode) {
        case 38:
          // up arrow
          this.props.onUpArrow();
          return false;
        case 40:
          // down arrow
          this.props.onDownArrow();
          return false;
        case 9: // tab
        case 13:
          // enter
          event.preventDefault();
          event.stopPropagation();
          this.props.onEnter();
          return false;
        case 8:
          // delete
          this.props.onDelete();
          return false;
        case 27:
          this.props.onEscape();
          return false;
        default:
          break;
      }
      return false;
    }
  }, {
    key: 'bindKeyListeners',
    value: function bindKeyListeners() {
      if (this.searchBox) {
        this.searchBox.addEventListener('keydown', this.onKeyListen);
      }
    }
  }, {
    key: 'unBindKeyListeners',
    value: function unBindKeyListeners() {
      if (this.searchBox) {
        this.searchBox.removeEventListener('keydown', this.onKeyListen);
      }
    }
  }, {
    key: 'refCallback',
    value: function refCallback(ref) {
      this.searchBox = ref;
      this.props.refCallback(ref);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement('input', {
        type: 'text',
        ref: this.refCallback,
        placeholder: this.props.placeholder,
        className: this.props.className,
        value: this.props.value,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        onClick: this.onClick,
        onChange: this.props.onChange,
        id: (0, _getIdWithSuffix2.default)(this.props, 'input-' + _lodash2.default.kebabCase(_lodash2.default.camelCase(this.props.placeholder)))
      });
    }
  }]);

  return DropdownSearch;
}(_react.Component);

{
  var func = _propTypes2.default.func,
      string = _propTypes2.default.string;

  DropdownSearch.propTypes = {
    refCallback: func.isRequired,
    onClick: func.isRequired,
    onChange: func.isRequired,
    onFocus: func.isRequired,
    onBlur: func.isRequired,
    placeholder: string.isRequired,
    value: string.isRequired,
    className: string,
    onEnter: func,
    onUpArrow: func,
    onDownArrow: func,
    onDelete: func,
    onEscape: func
  };
}

DropdownSearch.defaultProps = {
  className: '',
  onEnter: function onEnter() {},
  onUpArrow: function onUpArrow() {},
  onDownArrow: function onDownArrow() {},
  onDelete: function onDelete() {},
  onEscape: function onEscape() {}
};

exports.default = DropdownSearch;