'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckBox = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classAutobind = require('class-autobind');

var _classAutobind2 = _interopRequireDefault(_classAutobind);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _checkDisabled = require('../../lib/checkDisabled');

var _checkDisabled2 = _interopRequireDefault(_checkDisabled);

var _mergeClassNames = require('../../lib/mergeClassNames');

var _preventDefault = require('../../lib/preventDefault');

var _preventDefault2 = _interopRequireDefault(_preventDefault);

var _htmlProps = require('../../lib/htmlProps');

var _htmlProps2 = _interopRequireDefault(_htmlProps);

var _getIdWithSuffix = require('../../lib/getIdWithSuffix');

var _getIdWithSuffix2 = _interopRequireDefault(_getIdWithSuffix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CheckBox = exports.CheckBox = function (_Component) {
  _inherits(CheckBox, _Component);

  function CheckBox(props) {
    _classCallCheck(this, CheckBox);

    var _this = _possibleConstructorReturn(this, (CheckBox.__proto__ || Object.getPrototypeOf(CheckBox)).call(this, props));

    _this.state = _this.defaultState();
    (0, _classAutobind2.default)(_this);
    return _this;
  }

  _createClass(CheckBox, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(_ref) {
      var value = _ref.value,
          checked = _ref.checked;

      var _value = value || value === false ? value : checked;
      if (_value === undefined) {
        return;
      }
      this.setState(function () {
        return { value: _value };
      });
    }
  }, {
    key: 'onSelect',
    value: function onSelect(value) {
      this.setState(function () {
        return {
          value: value
        };
      });
    }
  }, {
    key: 'defaultState',
    value: function defaultState() {
      return {
        value: this.props.value || this.props.checked || this.props.defaultValue || this.props.defaultChecked || false
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          name = _props.name,
          className = _props.className,
          onChange = _props.onChange,
          label = _props.label,
          disabled = _props.disabled;
      var onSelect = this.onSelect;


      var _onChange = function _onChange(value) {
        if (value !== _this2.state.value) {
          onSelect(value);
          onChange(value);
        }
      };

      var classNames = 'checkbox ' + (disabled ? 'disabled' : '');
      var checkboxId = (0, _getIdWithSuffix2.default)(this.props, 'input');
      return _react2.default.createElement(
        'div',
        Object.assign({}, (0, _htmlProps2.default)(this.props), { className: (0, _mergeClassNames.mergeClassNames)(classNames, className) }),
        _react2.default.createElement('input', {
          readOnly: true,
          type: 'checkbox',
          name: name,
          checked: this.state.value,
          id: checkboxId,
          disabled: disabled
        }),
        _react2.default.createElement(
          'a',
          { href: '', onClick: (0, _preventDefault2.default)((0, _checkDisabled2.default)(disabled, function () {
              return _onChange(!_this2.state.value);
            })), id: (0, _getIdWithSuffix2.default)(this.props, 'on-click-link') },
          _react2.default.createElement(
            'label',
            { htmlFor: checkboxId, id: (0, _getIdWithSuffix2.default)(this.props, 'label') },
            label
          )
        )
      );
    }
  }]);

  return CheckBox;
}(_react.Component);

CheckBox.propTypes = {
  name: _propTypes2.default.string,
  label: _propTypes2.default.string.isRequired,
  defaultValue: _propTypes2.default.bool,
  defaultChecked: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  checked: _propTypes2.default.bool,
  value: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  disabled: _propTypes2.default.bool
};

CheckBox.defaultProps = {
  name: null,
  defaultChecked: undefined,
  defaultValue: undefined,
  onChange: function onChange() {},

  value: undefined,
  checked: undefined,
  className: '',
  disabled: false
};

exports.default = {
  CheckBox: CheckBox
};