import Immutable from 'seamless-immutable';
import requestStatus from './status';

export function statusCreator(state, action, actionPrefix, name) {
  switch (action.type) {
    case `${actionPrefix}_REQUEST`:
      return Immutable.merge(state, {
        [name]: requestStatus.IN_PROGRESS,
      });
    case `${actionPrefix}_SUCCESS`:
      return Immutable.merge(state, {
        [name]: requestStatus.DONE,
      });
    case `${actionPrefix}_FAILURE`:
      return Immutable.merge(state, {
        [name]: requestStatus.ERROR,
      });
    default:
      return state;
  }
}

export function batchStatusCreator(state, action, prefix, fields) {
  return fields.reduce((nextState, field) => Immutable.merge(
    nextState,
    statusCreator(nextState, action, prefix, field),
  ), state);
}

export default {
  statusCreator,
  batchStatusCreator,
};
