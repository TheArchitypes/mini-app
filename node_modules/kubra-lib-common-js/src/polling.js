import Promise from 'bluebird';

export function polling(callback, successCondition, time) {
  return new Promise((resolve, reject) => {
    let result = null;
    let attempts = 0;
    const maxAttempts = 5;
    const intervalId = setInterval(() => {
      attempts += 1;
      let execError = null;
      try {
        result = callback();
      } catch (exception) {
        execError = exception;
      }
      if (successCondition(result) || attempts === maxAttempts) {
        clearInterval(intervalId);
        if (successCondition(result)) {
          resolve(result);
        } else {
          const error = new Error('Failed to find success in polling.');
          error.data = result;
          if (execError) {
            error.executionError = execError;
          }
          reject(error);
        }
      }
    }, time);
  });
}

export default polling;
