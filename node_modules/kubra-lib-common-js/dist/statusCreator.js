'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.statusCreator = statusCreator;
exports.batchStatusCreator = batchStatusCreator;

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = _interopRequireDefault(_seamlessImmutable);

var _status = require('./status');

var _status2 = _interopRequireDefault(_status);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function statusCreator(state, action, actionPrefix, name) {
  switch (action.type) {
    case actionPrefix + '_REQUEST':
      return _seamlessImmutable2.default.merge(state, _defineProperty({}, name, _status2.default.IN_PROGRESS));
    case actionPrefix + '_SUCCESS':
      return _seamlessImmutable2.default.merge(state, _defineProperty({}, name, _status2.default.DONE));
    case actionPrefix + '_FAILURE':
      return _seamlessImmutable2.default.merge(state, _defineProperty({}, name, _status2.default.ERROR));
    default:
      return state;
  }
}

function batchStatusCreator(state, action, prefix, fields) {
  return fields.reduce(function (nextState, field) {
    return _seamlessImmutable2.default.merge(nextState, statusCreator(nextState, action, prefix, field));
  }, state);
}

exports.default = {
  statusCreator: statusCreator,
  batchStatusCreator: batchStatusCreator
};